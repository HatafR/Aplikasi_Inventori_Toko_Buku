/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import KoneksiDB.KoneksiDB;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class FormInventory extends javax.swing.JFrame {

    /**
     * Creates new form FormInventory
     */
    public FormInventory() {
        initComponents();
        tampildata();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        kode = new javax.swing.JTextField();
        penerbit = new javax.swing.JTextField();
        penulis = new javax.swing.JTextField();
        no_rak = new javax.swing.JTextField();
        cari_buku = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        judul = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        stok = new javax.swing.JTextField();
        harga = new javax.swing.JTextField();
        edit_rak = new javax.swing.JButton();
        cari = new javax.swing.JButton();
        simpan = new javax.swing.JButton();
        update = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Halaman Data Buku");

        jLabel2.setText("Kode Buku");

        jLabel3.setText("Penerbit");

        jLabel4.setText("Penulis");

        jLabel5.setText("Nomor Rak");

        jLabel6.setText("Cari Buku");

        jLabel7.setText("Judul");

        jLabel8.setText("Stok");

        jLabel9.setText("Harga");

        edit_rak.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        edit_rak.setText("Edit Rak");
        edit_rak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_rakActionPerformed(evt);
            }
        });

        cari.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cari.setText("Cari");

        simpan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        hapus.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        clear.setText("Clear");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Buku", "Judul Buku", "Penerbit", "Penulis", "Stok", "Harga", "Nomor Rak"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(kode, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                            .addComponent(penerbit)
                                            .addComponent(penulis))
                                        .addGap(106, 106, 106)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(harga, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                            .addComponent(stok)
                                            .addComponent(judul)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cari_buku, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                            .addComponent(no_rak, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(edit_rak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cari, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(109, 109, 109)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(simpan)
                                            .addComponent(update))
                                        .addGap(77, 77, 77)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(hapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(jLabel1)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(judul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(penerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(stok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(penulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(no_rak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit_rak)
                    .addComponent(simpan)
                    .addComponent(hapus))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cari_buku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cari)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update)
                            .addComponent(clear))))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        //deklarasi variabel untuk mebaca input pengguna
        String Kode = kode.getText();
        String Judul = judul.getText();
        String Penerbit = penerbit.getText();
        String Penulis = penulis.getText();
        int Stok = Integer.parseInt(stok.getText());
        int Harga = Integer.parseInt(harga.getText());
        String NoRak = no_rak.getText();
        //Simpan KE DB
        try {
            Connection koneksi = KoneksiDB.getKoneksi();
            //query simpan data ke db
            String querySimpan = "INSERT INTO buku (id_buku,judul,penerbit,penulis,stok,harga,no_rak)VALUES(?,?,?,?,?,?,?)";
            PreparedStatement p = koneksi.prepareStatement(querySimpan);
            //persiapan data yang akan disimpan
            p.setString(1, Kode);
            p.setString(2, Judul);
            p.setString(3, Penerbit);
            p.setString(4, Penulis);
            p.setInt(5, Stok);
            p.setInt(6, Harga);
            p.setString(7, NoRak);
            //eksekusi query
            p.executeUpdate();
            //tutup koneksi
            p.close();
            //menampilkan data ke tabel
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            Object[] obj = {Kode, Judul, Penulis, Penerbit, Stok, Harga, NoRak};
            model.addRow(obj);
            String pesan = "Data Tersimpan!!!";
            JOptionPane.showMessageDialog(null,pesan,"Sukses",JOptionPane.INFORMATION_MESSAGE);
            
            
        } 
            catch (SQLException e) {
            String pesan = "Data Gagal disimpan!!!";
            JOptionPane.showMessageDialog(null,pesan,"Kesalahan",JOptionPane.INFORMATION_MESSAGE);
            JOptionPane.showMessageDialog(null,"Kesalahan"+e.getMessage());
        }
    }//GEN-LAST:event_simpanActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int idxRow = jTable1.getSelectedRow();
        String Kode = jTable1.getValueAt (idxRow, 0).toString();
        String Judul = jTable1.getValueAt (idxRow, 1).toString();
        String Penerbit = jTable1.getValueAt (idxRow, 2).toString();
        String Penulis = jTable1.getValueAt (idxRow, 3).toString();
        String Stok = jTable1.getValueAt (idxRow, 4).toString();
        String Harga = jTable1.getValueAt (idxRow, 5).toString();
        String NoRak = jTable1.getValueAt (idxRow, 6).toString();
        
        kode.setText(Kode);
        judul.setText(Judul);
        penulis.setText(Penulis);
        penerbit.setText(Penerbit);
        stok.setText(Stok);
        harga.setText(Harga);
        no_rak.setText(NoRak);
    }//GEN-LAST:event_jTable1MouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
           // TODO add your handling code here:
        int ok = JOptionPane.showConfirmDialog(null,"Apakah anda yakin ingin mengubah data Buku dengan Kode Buku = "+kode.getText()+"?");
        if (ok==0){
        //deklarasi variabel untuk mebaca input pengguna
        String Kode = kode.getText();
        String Judul = judul.getText();
        String Penerbit = penerbit.getText();
        String Penulis = penulis.getText();
        int Stok = Integer.parseInt(stok.getText());
        int Harga = Integer.parseInt(harga.getText());
        String NoRak = no_rak.getText();
        //MEMBUAT QUERY YANG MENJALANKAN PERINTAH UPDATE
        try {
            Connection conn = KoneksiDB.getKoneksi();
            Statement s = conn.createStatement();            
            String QueryUpdate = "UPDATE buku SET id_buku = '"+Kode+"',judul = '"+Judul+"', penerbit = '"+Penerbit+"'"
                    + ",penulis = '"+Penulis+"', stok = '"+Stok+"',harga = '"+Harga+"',no_rak = '"+NoRak+"' WHERE id_buku = '"+Kode+"'";
            //MENGEKSEKUSI QUERY
            s.executeUpdate(QueryUpdate);
            //tutup koneksi
            s.close();
            //memperbarui data kedalam tabel
            int idxRow = jTable1.getSelectedRow();
            DefaultTableModel model;
            model = (DefaultTableModel)jTable1.getModel();
            model.setValueAt(Kode, idxRow, 0);
            model.setValueAt(Judul, idxRow, 1);
            model.setValueAt(Penulis, idxRow, 2);
            model.setValueAt(Penerbit, idxRow, 3);
            model.setValueAt(Stok, idxRow, 4);
            model.setValueAt(Harga, idxRow, 5);
            model.setValueAt(NoRak, idxRow, 6); 
            String pesan ="Data berhasil di update";
            JOptionPane.showMessageDialog(null,pesan,"Sukses",JOptionPane.INFORMATION_MESSAGE);
            
        } catch (SQLException e) {
            String pesan ="Data gagal diubah";
            JOptionPane.showMessageDialog(null,pesan,"Kesalahan",JOptionPane.INFORMATION_MESSAGE);
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        }
    }//GEN-LAST:event_updateActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        if (kode.getText().equals("")){
            hapus.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Kode Buku Tidak Boleh Kosong Untuk Menghapus Data Silahkan Klik Data Pada Tabel");
            
        } else{
            int ok = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin menghapus data Buku dengan Kode Buku = "+kode.getText()+"?");
            if (ok==0){
                try {
                    String query = "Delete FROM buku WHERE id_buku= ' "+kode.getText()+"'";
                    Connection con = new KoneksiDB().getKoneksi();
                    PreparedStatement ps = con.prepareStatement(query);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
                    ps.close();
                    
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Data Gagal Dihapus"+e.getMessage());
                }
            }
        }
        
    }//GEN-LAST:event_hapusActionPerformed

    private void edit_rakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_rakActionPerformed
        FormRakBuku Frb = new FormRakBuku();
        Frb.setVisible (true);
        this.setVisible(false);
    }//GEN-LAST:event_edit_rakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cari;
    private javax.swing.JTextField cari_buku;
    private javax.swing.JButton clear;
    private javax.swing.JButton edit_rak;
    private javax.swing.JButton hapus;
    private javax.swing.JTextField harga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField judul;
    private javax.swing.JTextField kode;
    private javax.swing.JTextField no_rak;
    private javax.swing.JTextField penerbit;
    private javax.swing.JTextField penulis;
    private javax.swing.JButton simpan;
    private javax.swing.JTextField stok;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void tampildata() {
        
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        try {
            Connection con = KoneksiDB.getKoneksi();
            Statement stat = con.createStatement();
            String QueryTampilDATA ="SELECT * FROM buku";
            ResultSet rs = stat.executeQuery(QueryTampilDATA);
            while (rs.next()) {
                Object[] obj = new Object[7];
                obj[0] = rs.getString("id_buku");
                obj[1] = rs.getString("judul");
                obj[2] = rs.getString("penulis");
                obj[3] = rs.getString("penerbit");
                obj[4] = rs.getInt("stok");
                obj[5] = rs.getInt("harga");
                obj[6] = rs.getString("no_rak");
                
                model.addRow(obj);            
                                
            }
            rs.close();
            stat.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"GAGAL MENAMPILKAN DATA");
        }
      }
    }

